name: Build and Push Docker Image to GHCR and Docker Hub

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Grant necessary permissions for GHCR package management
permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image to both registries
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/shopping2go/gh-self-hosted-runner:latest
            ghcr.io/shopping2go/gh-self-hosted-runner:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/gh-self-hosted-runner:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/gh-self-hosted-runner:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Make GHCR image public
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Setting GHCR package visibility to public..."
          
          # Wait a moment for the package to be registered in GHCR
          sleep 10
          
          PACKAGE_NAME="gh-self-hosted-runner"
          OWNER="shopping2go"
          
          echo "Attempting to set package visibility for $OWNER/$PACKAGE_NAME..."
          
          # Try organization endpoint first
          if gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/orgs/$OWNER/packages/container/$PACKAGE_NAME" \
            -f visibility='public' 2>&1; then
            echo "✅ Successfully set visibility via organization endpoint"
            ORG_SUCCESS=true
          else
            echo "⚠️  Organization endpoint failed, trying user endpoint..."
            # Try user endpoint
            if gh api \
              --method PATCH \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "/users/$OWNER/packages/container/$PACKAGE_NAME" \
              -f visibility='public' 2>&1; then
              echo "✅ Successfully set visibility via user endpoint"
              ORG_SUCCESS=true
            else
              echo "❌ Both endpoints failed"
              ORG_SUCCESS=false
            fi
          fi
          
          # Verify the package is actually public
          sleep 3
          echo ""
          echo "Verifying package visibility..."
          
          if RESPONSE=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/orgs/$OWNER/packages/container/$PACKAGE_NAME" 2>&1); then
            VISIBILITY=$(echo "$RESPONSE" | jq -r '.visibility // "unknown"')
            echo "Current visibility (org): $VISIBILITY"
            if [ "$VISIBILITY" = "public" ]; then
              echo "✅ Package is PUBLIC and accessible!"
              exit 0
            fi
          fi
          
          # Try user endpoint for verification
          if RESPONSE=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/users/$OWNER/packages/container/$PACKAGE_NAME" 2>&1); then
            VISIBILITY=$(echo "$RESPONSE" | jq -r '.visibility // "unknown"')
            echo "Current visibility (user): $VISIBILITY"
            if [ "$VISIBILITY" = "public" ]; then
              echo "✅ Package is PUBLIC and accessible!"
              exit 0
            fi
          fi
          
          echo ""
          echo "⚠️  WARNING: Could not verify package visibility automatically."
          echo "Please manually set the package to public:"
          echo "1. Go to: https://github.com/orgs/$OWNER/packages/container/$PACKAGE_NAME/settings"
          echo "2. Or: https://github.com/users/$OWNER/packages/container/$PACKAGE_NAME/settings"
          echo "3. Change 'Package visibility' to 'Public'"
          
          # Don't fail the workflow, just warn
          exit 0
